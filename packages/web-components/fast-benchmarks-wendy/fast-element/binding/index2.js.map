{"version":3,"file":"index2.js","sourceRoot":"","sources":["index2.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    attr,\n    bind,\n    css,\n    customElement,\n    FASTElement,\n    html,\n    oneTime,\n    repeat,\n} from \"@microsoft/fast-element\";\n\nimport { _random, adjectives, colours, nouns } from \"../../utils/constants.js\";\n\nconst itemCount = 250;\nconst updateCount = 6;\nlet id = 0;\n\ndeclare global {\n    interface Window {\n        usedJSHeapSize: any;\n        gc: any;\n    }\n    interface Performance {\n        memory: any;\n    }\n}\n\nexport const measureMemory = () => {\n    if (\"gc\" in window && \"memory\" in performance) {\n        // Report results in MBs\\\n        window.gc();\n        window.usedJSHeapSize = performance.memory.usedJSHeapSize / 1e6;\n    } else {\n        window.usedJSHeapSize = 0;\n    }\n};\n\nexport class RandomItem {\n    label: string;\n\n    constructor(public readonly id: number) {\n        this.label =\n            adjectives[_random(adjectives.length)] +\n            \" \" +\n            colours[_random(colours.length)] +\n            \" \" +\n            nouns[_random(nouns.length)];\n    }\n}\n\nfunction generateData(count: number) {\n    const data = [];\n\n    for (let i = 0; i < count; i++) {\n        data.push(new RandomItem(++id));\n    }\n\n    return data;\n}\nconst data: RandomItem[] = generateData(itemCount);\nconst otherData = generateData(itemCount * 2).slice(itemCount);\n\nconst xItemTemplate = html<XItem>`\n    <div @click=\"${x => x.onClick}\" class=\"item\">\n        ${x => x.value}\n    </div>\n`;\n\nconst styles = css`\n    .item {\n        display: flex;\n    }\n`;\n@customElement({\n    name: \"x-item\",\n    template: xItemTemplate,\n    styles,\n})\nclass XItem extends FASTElement {\n    @attr value: string | undefined;\n\n    onClick(e: MouseEvent) {\n        console.log(e.type);\n    }\n}\n\nconst xAppTemplate = html<XApp>`\n    <div id=\"test-container\">\n        ${repeat(\n            x => x.items,\n            html<RandomItem>`\n                <x-item\n                    :value=\"${bind((x: { label: string }) => x.label, oneTime)}\"\n                ></x-item>\n            `\n        )}\n    </div>\n`;\n@customElement({\n    name: \"x-app\",\n    template: xAppTemplate,\n})\nclass XApp extends FASTElement {\n    items: RandomItem[] = data;\n}\n\n//support older browsesrs or if we're not using modules\n(async () => {\n    const container = document.createElement(\"div\");\n    document.body.appendChild(container);\n    let el: XApp;\n\n    const create = () => {\n        const el = document.createElement(\"x-app\") as XApp;\n        return container.appendChild(el) as XApp;\n    };\n    const destroy = () => {\n        container.innerHTML = \"\";\n    };\n    const getTestStartName = (name: string) => `${name}-start`;\n    const updateComplete = () => new Promise(r => requestAnimationFrame(r));\n\n    const render = async () => {\n        const test = \"binding\";\n        const start = getTestStartName(test);\n        performance.mark(start);\n        create();\n        await updateComplete();\n        performance.measure(test, start);\n        destroy();\n    };\n    await render();\n    // measureMemory();\n\n    // const update = async () => {\n    //     const test = \"update\";\n    //     el = create();\n    //     const start = getTestStartName(test);\n    //     performance.mark(start);\n    //     for (let i = 0; i < updateCount; i++) {\n    //         el.items = i % 2 ? otherData : data;\n    //         await updateComplete();\n    //     }\n    //     performance.measure(test, start);\n    //     destroy();\n    // };\n    // await update();\n    // measureMemory();\n\n    // Log\n    performance\n        .getEntriesByType(\"measure\")\n        .forEach(m => console.log(`${m.name}: ${m.duration.toFixed(3)}ms`));\n})();\n"]}